/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import com.mysql.jdbc.CallableStatement;
import java.awt.Image;
import java.io.File;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.atomic.AtomicReference;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;
import sesion.HibernateUtil;

/**
 *
 * @author G I U S Chamika
 */
public class additem extends javax.swing.JInternalFrame {

    String selectitemid = null;
    String selectitemqun = null;
    public additem() {
        initComponents();
        jLabel21.setVisible(false);
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui=(BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        
        Session session=null;
            session=HibernateUtil.getSessionFactory().openSession();
            final AtomicReference<ResultSet> order=new AtomicReference<>();
            session.doWork(connection->{
                try(CallableStatement cst=(CallableStatement) connection.prepareCall("{call getitemlistorder()}")){
                    cst.execute();
                    order.set(cst.getResultSet());
                    try(ResultSet rs =cst.getResultSet()){
                        while(rs.next()){
                            
                            String name = rs.getString("item_name");
                            String catagory=rs.getString("item_catagory");
                            String price=rs.getString("item_price");
                            String quntity =rs.getString("item_quntity");
                            String iditem=rs.getString("item_id");
                            String imgitem=rs.getString("item_img");
                            
                            
                            String tbData[] = {name, catagory, quntity, price, iditem, imgitem};
                            DefaultTableModel tblm = (DefaultTableModel) jTable1d.getModel();
                            tblm.addRow(tbData);
                           
                        }
                    }
                }
            });
            
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1d = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 255, 102));
        setOpaque(true);
        setPreferredSize(new java.awt.Dimension(867, 526));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/menulunchimg.png"))); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 30, 220, 120));

        jTable1d.setBackground(new java.awt.Color(0, 204, 204));
        jTable1d.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Catagory", "Quantity", "Price", "id", "img"
            }
        ));
        jTable1d.setGridColor(new java.awt.Color(51, 255, 255));
        jTable1d.setSelectionBackground(new java.awt.Color(0, 153, 153));
        jTable1d.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1dMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1d);
        if (jTable1d.getColumnModel().getColumnCount() > 0) {
            jTable1d.getColumnModel().getColumn(2).setMinWidth(100);
            jTable1d.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable1d.getColumnModel().getColumn(2).setMaxWidth(100);
            jTable1d.getColumnModel().getColumn(3).setMinWidth(100);
            jTable1d.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable1d.getColumnModel().getColumn(3).setMaxWidth(100);
            jTable1d.getColumnModel().getColumn(4).setMinWidth(0);
            jTable1d.getColumnModel().getColumn(4).setPreferredWidth(0);
            jTable1d.getColumnModel().getColumn(4).setMaxWidth(0);
            jTable1d.getColumnModel().getColumn(5).setMinWidth(0);
            jTable1d.getColumnModel().getColumn(5).setPreferredWidth(0);
            jTable1d.getColumnModel().getColumn(5).setMaxWidth(0);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 620, 220));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 380, 240, 20));

        jLabel9.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Width-220 Height-120");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 160, 200, -1));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 460, 230, 20));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add.png"))); // NOI18N
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 430, 150, 40));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 204, 204));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Add New Item");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 410, 150, 20));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/submit.png"))); // NOI18N
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 440, 30, 30));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 344, 290, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/additemrig.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 10, 220, 170));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 200, 40, 40));

        jTextField1.setForeground(new java.awt.Color(102, 102, 102));
        jTextField1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 153, 153))); // NOI18N
        jTextField1.setCaretColor(new java.awt.Color(0, 204, 204));
        jTextField1.setSelectionColor(new java.awt.Color(0, 153, 153));
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, 360, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 60, 30));

        jTextField2.setForeground(new java.awt.Color(102, 102, 102));
        jTextField2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 153, 153))); // NOI18N
        jTextField2.setCaretColor(new java.awt.Color(0, 204, 204));
        jTextField2.setSelectionColor(new java.awt.Color(0, 153, 153));
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 270, 290, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Catagory");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 270, 60, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Price");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 320, 40, 30));

        jTextField3.setForeground(new java.awt.Color(102, 102, 102));
        jTextField3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 153, 153))); // NOI18N
        jTextField3.setCaretColor(new java.awt.Color(0, 204, 204));
        jTextField3.setSelectionColor(new java.awt.Color(0, 153, 153));
        jPanel1.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, 300, 30));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/submit.png"))); // NOI18N
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 330, 30, 30));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/additemedit.png"))); // NOI18N
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 870, 130));

        jTextField4.setForeground(new java.awt.Color(102, 102, 102));
        jTextField4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 153, 153))); // NOI18N
        jTextField4.setCaretColor(new java.awt.Color(0, 204, 204));
        jTextField4.setSelectionColor(new java.awt.Color(0, 153, 153));
        jPanel1.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 420, 310, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 0, 51));
        jLabel10.setText("Quantity");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 60, 30));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/qunup.png"))); // NOI18N
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 490, 100));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/submit.png"))); // NOI18N
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 330, 30, 30));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/addnewitem.png"))); // NOI18N
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 400, 160, 80));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 344, 290, 20));

        jLabel14.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Change Item pic ");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 180, 200, -1));

        jLabel21.setText("jLabel21");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 190, -1, -1));

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 204, 204));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Delete This Item");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 410, 150, 20));

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete_trash_35px.png"))); // NOI18N
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 430, 150, 40));

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/addnewitem.png"))); // NOI18N
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel25MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 400, 160, 80));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        
        int itemidup;
        int priceint;
        String itemname = jTextField1.getText();
        String itemcata = jTextField2.getText();
        String itemprice = jTextField3.getText();
        
        if(selectitemid!=null){
            itemidup = Integer.parseInt(selectitemid);
            if(!itemname.isEmpty() && !itemcata.isEmpty() && !itemprice.isEmpty()){
                priceint = Integer.parseInt(itemprice);
                Session session2=null;
                session2=HibernateUtil.getSessionFactory().openSession();
                final AtomicReference<ResultSet> selordr=new AtomicReference<>();
                session2.doWork(connection->{
                    try(CallableStatement cst=(CallableStatement) connection.prepareCall("{call upitemdata(?,?,?,?)}")){
                        cst.setInt(1, itemidup);
                        cst.setString(2, itemname);
                        cst.setString(3, itemcata);
                        cst.setInt(4, priceint);
                        cst.execute();
                        
                    }
                });
                
                jTable1d.setBackground(new java.awt.Color(0, 204, 204));
                jTable1d.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {

                    },
                    new String [] {
                        "Item Name", "Catagory", "Quntity", "Price", "id", "img"
                    }
                ));
                if (jTable1d.getColumnModel().getColumnCount() > 0) {
                    jTable1d.getColumnModel().getColumn(2).setMinWidth(100);
                    jTable1d.getColumnModel().getColumn(2).setPreferredWidth(100);
                    jTable1d.getColumnModel().getColumn(2).setMaxWidth(100);
                    jTable1d.getColumnModel().getColumn(3).setMinWidth(100);
                    jTable1d.getColumnModel().getColumn(3).setPreferredWidth(100);
                    jTable1d.getColumnModel().getColumn(3).setMaxWidth(100);
                    jTable1d.getColumnModel().getColumn(4).setMinWidth(0);
                    jTable1d.getColumnModel().getColumn(4).setPreferredWidth(0);
                    jTable1d.getColumnModel().getColumn(4).setMaxWidth(0);
                    jTable1d.getColumnModel().getColumn(5).setMinWidth(0);
                    jTable1d.getColumnModel().getColumn(5).setPreferredWidth(0);
                    jTable1d.getColumnModel().getColumn(5).setMaxWidth(0);
                }
                
                Session session=null;
                session=HibernateUtil.getSessionFactory().openSession();
                final AtomicReference<ResultSet> order=new AtomicReference<>();
                session.doWork(connection->{
                    try(CallableStatement cst=(CallableStatement) connection.prepareCall("{call getitemlistorder()}")){
                        cst.execute();
                        order.set(cst.getResultSet());
                        try(ResultSet rs =cst.getResultSet()){
                            while(rs.next()){

                                String name = rs.getString("item_name");
                                String catagory=rs.getString("item_catagory");
                                String price=rs.getString("item_price");
                                String quntity =rs.getString("item_quntity");
                                String iditem=rs.getString("item_id");
                                String imgitem=rs.getString("item_img");


                                String tbData[] = {name, catagory, quntity, price, iditem, imgitem};
                                DefaultTableModel tblm = (DefaultTableModel) jTable1d.getModel();
                                tblm.addRow(tbData);

                            }
                        }
                    }
                });
                
                jLabel18.setForeground(new java.awt.Color(0, 204, 51));
                jLabel18.setText("Successful Update");
            }else{
                jLabel18.setForeground(new java.awt.Color(255, 0, 0));
                jLabel18.setText("Some Fields is Empty !");
            }
        }else{
            jLabel18.setForeground(new java.awt.Color(255, 0, 0));
            jLabel18.setText("Please Select Item !");
        }
       
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel16MouseClicked

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        int itemidup2;
        int quntity2;
        int qunselect;
        int totalqun;
        String quntitye =jTextField4.getText();
        if(selectitemid!=null){
            itemidup2 = Integer.parseInt(selectitemid);
            if(!quntitye.isEmpty()){
                quntity2 = Integer.parseInt(quntitye);
                qunselect = Integer.parseInt(selectitemqun);
                totalqun = (quntity2 + qunselect);
                Session session3=null;
                session3=HibernateUtil.getSessionFactory().openSession();
                final AtomicReference<ResultSet> selordr=new AtomicReference<>();
                session3.doWork(connection->{
                    try(CallableStatement cst=(CallableStatement) connection.prepareCall("{call upitemqunadmin(?,?)}")){
                        cst.setInt(1, itemidup2);
                        cst.setInt(2, totalqun);
                        cst.execute();
                    }
                });
                
                jTable1d.setBackground(new java.awt.Color(0, 204, 204));
                jTable1d.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {

                    },
                    new String [] {
                        "Item Name", "Catagory", "Quntity", "Price", "id", "img"
                    }
                ));
                if (jTable1d.getColumnModel().getColumnCount() > 0) {
                    jTable1d.getColumnModel().getColumn(2).setMinWidth(100);
                    jTable1d.getColumnModel().getColumn(2).setPreferredWidth(100);
                    jTable1d.getColumnModel().getColumn(2).setMaxWidth(100);
                    jTable1d.getColumnModel().getColumn(3).setMinWidth(100);
                    jTable1d.getColumnModel().getColumn(3).setPreferredWidth(100);
                    jTable1d.getColumnModel().getColumn(3).setMaxWidth(100);
                    jTable1d.getColumnModel().getColumn(4).setMinWidth(0);
                    jTable1d.getColumnModel().getColumn(4).setPreferredWidth(0);
                    jTable1d.getColumnModel().getColumn(4).setMaxWidth(0);
                    jTable1d.getColumnModel().getColumn(5).setMinWidth(0);
                    jTable1d.getColumnModel().getColumn(5).setPreferredWidth(0);
                    jTable1d.getColumnModel().getColumn(5).setMaxWidth(0);
                }
                
                Session session=null;
                session=HibernateUtil.getSessionFactory().openSession();
                final AtomicReference<ResultSet> order=new AtomicReference<>();
                session.doWork(connection->{
                    try(CallableStatement cst=(CallableStatement) connection.prepareCall("{call getitemlistorder()}")){
                        cst.execute();
                        order.set(cst.getResultSet());
                        try(ResultSet rs =cst.getResultSet()){
                            while(rs.next()){

                                String name = rs.getString("item_name");
                                String catagory=rs.getString("item_catagory");
                                String price=rs.getString("item_price");
                                String quntity =rs.getString("item_quntity");
                                String iditem=rs.getString("item_id");
                                String imgitem=rs.getString("item_img");


                                String tbData[] = {name, catagory, quntity, price, iditem, imgitem};
                                DefaultTableModel tblm = (DefaultTableModel) jTable1d.getModel();
                                tblm.addRow(tbData);

                            }
                        }
                    }
                });
                
                jLabel20.setForeground(new java.awt.Color(0, 204, 51));
                jLabel20.setText("Successful Update");
            }else{
                jLabel20.setForeground(new java.awt.Color(255, 0, 0));
                jLabel20.setText("Some Field is Empty !");
            }
        }else{
            jLabel20.setForeground(new java.awt.Color(255, 0, 0));
            jLabel20.setText("Please Select Item !");
        }
        
    }//GEN-LAST:event_jLabel17MouseClicked

    private void jTable1dMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1dMouseClicked
       
      DefaultTableModel dmodel = (DefaultTableModel) jTable1d.getModel();
      int selectindex = jTable1d.getSelectedRow();
      
       selectitemid = dmodel.getValueAt(selectindex, 4).toString();
       selectitemqun = dmodel.getValueAt(selectindex, 2).toString();
       jTextField1.setText(dmodel.getValueAt(selectindex, 0).toString());
       jTextField2.setText(dmodel.getValueAt(selectindex, 1).toString());
       jTextField3.setText(dmodel.getValueAt(selectindex, 3).toString());
       jTextField4.setText(dmodel.getValueAt(selectindex, 2).toString());
       jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource(dmodel.getValueAt(selectindex, 5).toString()))); // NOI18N
        
    }//GEN-LAST:event_jTable1dMouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        int itemidup4;
        
        if(selectitemid!=null){
            Date thisdate = new Date();
            SimpleDateFormat smdf = new SimpleDateFormat("MM_dd_Y_h_mm");
            String todaytime = smdf.format(thisdate);

            jLabel21.setVisible(false);

            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File f = chooser.getSelectedFile();
            String filename = f.getAbsolutePath();
            jLabel21.setText(filename);
            Image getAbsolutePath = null;
            ImageIcon icon = new ImageIcon(filename);
            Image image = icon.getImage().getScaledInstance(jLabel8.getWidth(), jLabel8.getHeight(), Image.SCALE_SMOOTH);
            jLabel8.setIcon(icon);
            String img = jLabel21.getText();
            img=img.replace("\\", "\\");
            String imgrealpath = "/userimg/"+selectitemid+todaytime+".png";
            boolean suc = f.renameTo(new File("C:/Users/G I U S Chamika/Desktop/canteen/UORCanteen/src"+imgrealpath));

            itemidup4 = Integer.parseInt(selectitemid);

                    Session session4=null;
                    session4=HibernateUtil.getSessionFactory().openSession();
                    final AtomicReference<ResultSet> selordr=new AtomicReference<>();
                    session4.doWork(connection->{
                        try(CallableStatement cst=(CallableStatement) connection.prepareCall("{call upitemimg(?,?)}")){
                            cst.setInt(1, itemidup4);
                            cst.setString(2, imgrealpath);
                            cst.execute();
                        }
                    });
                    
                jTable1d.setBackground(new java.awt.Color(0, 204, 204));
                jTable1d.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {

                    },
                    new String [] {
                        "Item Name", "Catagory", "Quntity", "Price", "id", "img"
                    }
                ));
                if (jTable1d.getColumnModel().getColumnCount() > 0) {
                    jTable1d.getColumnModel().getColumn(2).setMinWidth(100);
                    jTable1d.getColumnModel().getColumn(2).setPreferredWidth(100);
                    jTable1d.getColumnModel().getColumn(2).setMaxWidth(100);
                    jTable1d.getColumnModel().getColumn(3).setMinWidth(100);
                    jTable1d.getColumnModel().getColumn(3).setPreferredWidth(100);
                    jTable1d.getColumnModel().getColumn(3).setMaxWidth(100);
                    jTable1d.getColumnModel().getColumn(4).setMinWidth(0);
                    jTable1d.getColumnModel().getColumn(4).setPreferredWidth(0);
                    jTable1d.getColumnModel().getColumn(4).setMaxWidth(0);
                    jTable1d.getColumnModel().getColumn(5).setMinWidth(0);
                    jTable1d.getColumnModel().getColumn(5).setPreferredWidth(0);
                    jTable1d.getColumnModel().getColumn(5).setMaxWidth(0);
                }
                
                Session session=null;
                session=HibernateUtil.getSessionFactory().openSession();
                final AtomicReference<ResultSet> order=new AtomicReference<>();
                session.doWork(connection->{
                    try(CallableStatement cst=(CallableStatement) connection.prepareCall("{call getitemlistorder()}")){
                        cst.execute();
                        order.set(cst.getResultSet());
                        try(ResultSet rs =cst.getResultSet()){
                            while(rs.next()){

                                String name = rs.getString("item_name");
                                String catagory=rs.getString("item_catagory");
                                String price=rs.getString("item_price");
                                String quntity =rs.getString("item_quntity");
                                String iditem=rs.getString("item_id");
                                String imgitem=rs.getString("item_img");


                                String tbData[] = {name, catagory, quntity, price, iditem, imgitem};
                                DefaultTableModel tblm = (DefaultTableModel) jTable1d.getModel();
                                tblm.addRow(tbData);

                            }
                        }
                    }
                });
                
                jLabel14.setForeground(new java.awt.Color(0, 204, 51));
                jLabel14.setText("Successful Update");
        }else{
            jLabel14.setForeground(new java.awt.Color(255, 0, 0));
            jLabel14.setText("Please Select Item !");
        }

        
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseClicked
         if(selectitemid!=null){
            int itemidup2 = Integer.parseInt(selectitemid);
            int response = JOptionPane.showConfirmDialog(this, "Conform Delete This Item","",JOptionPane.YES_NO_CANCEL_OPTION);
                 if(response==JOptionPane.YES_OPTION){

                     Session session7=null;
                         session7=HibernateUtil.getSessionFactory().openSession();
                         final AtomicReference<ResultSet> selordr=new AtomicReference<>();
                         session7.doWork(connection->{
                             try(CallableStatement cst=(CallableStatement) connection.prepareCall("{call deleteitem(?)}")){
                                 cst.setInt(1, itemidup2);
                                 cst.execute();
                             }
                         });
                 } 
                 
                 jTable1d.setBackground(new java.awt.Color(0, 204, 204));
                jTable1d.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {

                    },
                    new String [] {
                        "Item Name", "Catagory", "Quntity", "Price", "id", "img"
                    }
                ));
                if (jTable1d.getColumnModel().getColumnCount() > 0) {
                    jTable1d.getColumnModel().getColumn(2).setMinWidth(100);
                    jTable1d.getColumnModel().getColumn(2).setPreferredWidth(100);
                    jTable1d.getColumnModel().getColumn(2).setMaxWidth(100);
                    jTable1d.getColumnModel().getColumn(3).setMinWidth(100);
                    jTable1d.getColumnModel().getColumn(3).setPreferredWidth(100);
                    jTable1d.getColumnModel().getColumn(3).setMaxWidth(100);
                    jTable1d.getColumnModel().getColumn(4).setMinWidth(0);
                    jTable1d.getColumnModel().getColumn(4).setPreferredWidth(0);
                    jTable1d.getColumnModel().getColumn(4).setMaxWidth(0);
                    jTable1d.getColumnModel().getColumn(5).setMinWidth(0);
                    jTable1d.getColumnModel().getColumn(5).setPreferredWidth(0);
                    jTable1d.getColumnModel().getColumn(5).setMaxWidth(0);
                }
                
                Session session=null;
                session=HibernateUtil.getSessionFactory().openSession();
                final AtomicReference<ResultSet> order=new AtomicReference<>();
                session.doWork(connection->{
                    try(CallableStatement cst=(CallableStatement) connection.prepareCall("{call getitemlistorder()}")){
                        cst.execute();
                        order.set(cst.getResultSet());
                        try(ResultSet rs =cst.getResultSet()){
                            while(rs.next()){

                                String name = rs.getString("item_name");
                                String catagory=rs.getString("item_catagory");
                                String price=rs.getString("item_price");
                                String quntity =rs.getString("item_quntity");
                                String iditem=rs.getString("item_id");
                                String imgitem=rs.getString("item_img");


                                String tbData[] = {name, catagory, quntity, price, iditem, imgitem};
                                DefaultTableModel tblm = (DefaultTableModel) jTable1d.getModel();
                                tblm.addRow(tbData);

                            }
                        }
                    }
                });
                 
                jLabel22.setForeground(new java.awt.Color(0, 204, 51));
                jLabel22.setText("Successful Delete Item");
         }else{
            jLabel22.setForeground(new java.awt.Color(255, 0, 0));
            jLabel22.setText("Please Select Item !");
         }
           
    }//GEN-LAST:event_jLabel25MouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
       new newitemadd().setVisible(true);
    }//GEN-LAST:event_jLabel11MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1d;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
